<?xml version="1.0"?>
<robot>
    
    <!-- Base Link -->
    <gazebo reference="base_link">
        <material>Gazebo/Green</material>
    </gazebo>


    <!-- CASTER-->
    <gazebo reference="caster">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Grey</material>
    </gazebo>
    
    <!--Right wheel-->
    <gazebo reference="right_wheel">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material> Gazebo/Grey</material>
    </gazebo>

    <!--Left wheel-->
    <gazebo reference="left_wheel">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Grey</material>
    </gazebo>
    
    <!-- Camera -->
    <gazebo reference ="camera">
        <mu1>0.1</mu1>
        <mu2>0.1</mu2>
        <material>Gazebo/White</material>
    </gazebo>

    <!--Differential Drive Controller for 2-wheel-robot-->
     <gazebo>
        <plugin name="diff_drive" filename="libgazebo_ros_diff_drive.so">

            <!-- Wheel Information -->
            <left_joint>joint_left_wheel</left_joint>
            <right_joint>joint_right_wheel</right_joint>
            <wheel_separation>0.5</wheel_separation>
            <wheel_diameter>0.2</wheel_diameter>


            <!-- Limits -->
            <max_wheel_torque>200</max_wheel_torque>
            <max_wheel_acceleration>10.0</max_wheel_acceleration>

            
            <!-- Output -->
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_link</robot_base_frame>

            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_tf>true</publish_wheel_tf>

        </plugin>
    </gazebo>  


    <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>dd_robotot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>  

        
  <!-- hokuyo -->
      <gazebo reference="hokuyo">
        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>20</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-1.57</min_angle>
                        <max_angle>1.57</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.2</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>hokuyo</frame_name>
            </plugin>
        </sensor>
    </gazebo>
</robot>